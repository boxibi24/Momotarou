default:
  image: python:latest

stages:
  - build
  - upload
  - release
  - pages




variables:
  # Package version can only contain numbers (0-9), and dots (.).
  # Must be in the format of X.Y.Z, i.e. should match /\A\d+\.\d+\.\d+\z/ regular expresion.
  # See https://docs.gitlab.com/ee/user/packages/generic_packages/#publish-a-package-file
  PACKAGE_VERSION: "0.0.1"
  DARWIN_AMD64_BINARY: "NodeEditor.exe"
  # LINUX_AMD64_BINARY: "myawesomerelease-linux-amd64-${PACKAGE_VERSION}"
  PACKAGE_REGISTRY_URL: "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/releases/${PACKAGE_VERSION}"
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"

build:
  stage: build
  image: 
    name: cdrx/pyinstaller-windows:python3
    entrypoint: ['/bin/bash', '-c', 'ln -snf /bin/bash /bin/sh && /bin/bash -c $0']
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  cache:
    paths:
      - .cache/pip
      - venv/
  before_script:
  #   # - ls
    - python --version  # For debugging
    - python -m pip install --upgrade pip wheel setuptools
    # - pip install virtualenv
    # - virtualenv venv
    # - source venv/bin/activate
    - apt-get update && apt-get install -y libgl1
    # # - add-apt-repository ppa:deadsnakes/ppa   
    # # - apt install python3.7    
    - pip install -r requirements.txt
  #   # - pip install pyinstaller
  #   # - echo ${PACKAGE_REGISTRY_URL}
  script:
    # - mkdir bin
    # - cd ../..
    # - ls
    # - sh entrypoint-windows.sh
    # - cdrx/pyinstaller-windows
    - pyinstaller main_node_editor.py --name NodeEditor --paths=./ --add-data "Config/*.cfg;Config" --add-data "font/*.ttf;font"

  artifacts:
    paths:
      - dist/


upload:
  stage: upload
  image: curlimages/curl:latest
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  script:
    - |
      IFS=$' \t\r\n'
    - |
      curl --proxy-insecure --proxy-cacert --header "JOB-TOKEN: ${CI_JOB_TOKEN}" --upload-file bin/${DARWIN_AMD64_BINARY} "${PACKAGE_REGISTRY_URL}/${DARWIN_AMD64_BINARY}"
    # - |
    #   curl --header "JOB-TOKEN: ${CI_JOB_TOKEN}" --upload-file bin/${LINUX_AMD64_BINARY} "${PACKAGE_REGISTRY_URL}/${LINUX_AMD64_BINARY}"

release:
  # Caution, as of 2021-02-02 these assets links require a login, see:
  # https://gitlab.com/gitlab-org/gitlab/-/issues/299384
  stage: release
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  script:
    - |
      release-cli create --name "Release $CI_COMMIT_TAG" --tag-name $CI_COMMIT_TAG \
        --assets-link "{\"name\":\"${DARWIN_AMD64_BINARY}\",\"url\":\"${PACKAGE_REGISTRY_URL}/${DARWIN_AMD64_BINARY}\"}"
        # --assets-link "{\"name\":\"${LINUX_AMD64_BINARY}\",\"url\":\"${PACKAGE_REGISTRY_URL}/${LINUX_AMD64_BINARY}\"}"

pages:
  stage: pages
  cache:
    paths:
      - .cache/pip
      - venv/
  before_script:
    - python --version  # For debugging
    - pip install virtualenv
    - virtualenv venv
    - source venv/bin/activate
    - apt-get update && apt-get install -y libgl1
    - pip install -r requirements.txt
    - pip install sphinx sphinx-book-theme sphinx-autodoc-typehints myst-nb sphinx-thebe
    - pip install pyinstaller

  script:
    - cd docs
    - make html
    - mv build/html/ ../public/
  artifacts:
    paths:
      - public
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

