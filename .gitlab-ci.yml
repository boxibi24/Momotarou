stages:
  - build
  - upload
  - release
  - pages




variables:
  # Package version can only contain numbers (0-9), and dots (.).
  # Must be in the format of X.Y.Z, i.e. should match /\A\d+\.\d+\.\d+\z/ regular expresion.
  # See https://docs.gitlab.com/ee/user/packages/generic_packages/#publish-a-package-file
  WINDOWS_BINARY: "momotarou_release_v${PACKAGE_VERSION}.zip"
  WINDOWS_MSI: "Momotarou.msi"
  PACKAGE_REGISTRY_URL: "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/releases/${PACKAGE_VERSION}"
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"

build:
  stage: build
  tags:
    - pages
  # image:
  #   name: cdrx/pyinstaller-windows:python3
  #   entrypoint: ['/bin/bash', '-c', 'ln -snf /bin/bash /bin/sh && /bin/bash -c $0']
  rules:
    - if: $CI_COMMIT_TAG
  before_script:
    - python --version  # For debugging
    # - python -m pip install --upgrade pip wheel setuptools attrdict3
    - pip install -r requirements.txt
    # - python -m pip install pywin32
    # - python -m pip install wxPython==4.1.1
    # - apt-get update -y && apt-get install -y libgl1 zip
  script:
    # - wget --no-check-certificate "https://extras.wxpython.org/wxPython4/extras/linux/gtk3/ubuntu-18.04/wxPython-4.1.1-cp37-cp37m-linux_x86_64.whl"
    # - ls
    # - pip install wxPython-4.1.1-cp37-cp37m-linux_x86_64.whl
    # - cd src/WixMSIPackageProject
    # - wget https://dot.net/v1/dotnet-install.sh -O dotnet-install.sh
    # - chmod +x ./dotnet-install.sh
    # - ./dotnet-install.sh --version latest
    # - export DOTNET_ROOT=$HOME/.dotnet
    # - export PATH=$PATH:$DOTNET_ROOT:$DOTNET_ROOT/tools
    # - dotnet tool install --global wix --version 4.0.2
    # - dotnet build ./WixMSIPackageProject.sln --runtime win-x86 --configuration Release -p:ImportByWildcardBeforeSolution=false -p:GenerateSerializationAssemblies=Off
    # - cd ../..
    - mkdir bin
    # - sh entrypoint-windows.sh
    - cd src
    - pyinstaller --clean -y --dist ./dist --workpath /tmp NodeEditor.spec
    - pyinstaller --clean -y --dist ./dist --workpath /tmp ToolsViewer.spec
    - cp -r nodes ./dist/NodeEditor
    - cp -r ../examples ./dist/NodeEditor
    - cp -r nodes ./dist/ToolsViewer
    - cp -r ../examples ./dist/ToolsViewer

    # - winget install Microsoft.DotNet.SDK.7
    # - dotnet tool install --global wix --version 4.0.2
    - cd WixMSIPackageProject
    - msbuild -Restore ./WixMSIPackageProject.sln /t:Build /p:Configuration=Release /p:Platform=x64 /p:DefineConstants="ProductVersion=${PACKAGE_VERSION}"
    # - cd ./bin/x64/Release/en-US
    # - dir
    # - cd ../../../../../
    - cp ./bin/x64/Release/en-US/${WINDOWS_MSI} ../../bin
    - cd ../dist
    # - zip -r ${WINDOWS_BINARY} *
    - powershell Compress-Archive .\ ${WINDOWS_BINARY}
    - dir
    - cp ${WINDOWS_BINARY} ../../bin
    - cd ../../bin
    - dir
  artifacts:
    paths:
      - bin/
    when: on_success

upload:
  stage: upload
  tags:
    - pages
  # image: curlimages/curl:latest
  needs: ["build"]
  rules:
    - if: $CI_COMMIT_TAG
  dependencies:
    - build
  script:
    - Remove-item alias:curl
    # - |
    #   ${CURLEXE}, '--insecure', '--header', "JOB-TOKEN: ${CI_JOB_TOKEN}", '--upload-file', 'bin/${WINDOWS_BINARY}', "${PACKAGE_REGISTRY_URL}/${WINDOWS_BINARY}"
    - |
      curl.exe --insecure --header "JOB-TOKEN: ${CI_JOB_TOKEN}" --upload-file bin/${WINDOWS_BINARY} "${PACKAGE_REGISTRY_URL}/${WINDOWS_BINARY}"
    - |
      curl.exe --insecure --header "JOB-TOKEN: ${CI_JOB_TOKEN}" --upload-file bin/${WINDOWS_MSI} "${PACKAGE_REGISTRY_URL}/${WINDOWS_MSI}"
    # - |
    #   ${CURLEXE}, '--insecure', '--header', "JOB-TOKEN: ${CI_JOB_TOKEN}", '--upload-file', 'bin/${WINDOWS_MSI}', "${PACKAGE_REGISTRY_URL}/${WINDOWS_MSI}"
    # - |
    #   curl --insecure --header "JOB-TOKEN: ${CI_JOB_TOKEN}" --upload-file bin/${WINDOWS_MSI} "${PACKAGE_REGISTRY_URL}/${WINDOWS_MSI}"

release:
  # Caution, as of 2021-02-02 these assets links require a login, see:
  # https://gitlab.com/gitlab-org/gitlab/-/issues/299384
  stage: release
  tags:
    - pages
  # image: registry.gitlab.com/gitlab-org/release-cli:latest
  variables:
    ADDITIONAL_CA_CERT_BUNDLE: $CA_CERT
  needs: ["upload"]
  rules:
    - if: $CI_COMMIT_TAG
  script:
    - $env:asset1 = "{`"name`":`"${WINDOWS_BINARY}`",`"url`":`"${PACKAGE_REGISTRY_URL}/${WINDOWS_BINARY}`"}"
    - $env:asset2 = "{`"name`":`"${WINDOWS_MSI}`",`"url`":`"${PACKAGE_REGISTRY_URL}/${WINDOWS_MSI}`"}"
    - $env:asset1json = $env:asset1 | ConvertTo-Json
    - $env:asset2json = $env:asset2 | ConvertTo-Json
    - |
      release-cli create --name "Release ${CI_COMMIT_TAG}" --tag-name ${CI_COMMIT_TAG} --assets-link $env:asset1json --assets-link $env:asset2json

pages:
  stage: pages
  tags:
    - pages
  cache:
    paths:
      - .cache/pip
      - venv/
  before_script:
    - python --version  # For debugging
    # - pip install virtualenv
    # - virtualenv venv
    # - source venv/bin/activate
    # - apt-get update && apt-get install -y libgl1
    # - python -m pip install --upgrade pip wheel setuptools attrdict3
    - pip install -r requirements.txt
    # - pip install dill p4python psutil requests urllib3
    - pip install sphinx sphinx-book-theme sphinx-autodoc-typehints myst-nb sphinx-thebe
    # - pip install pyinstaller

  script:
    - cd src/docs
    - make html
    - mv build/html/ ../../public/
  artifacts:
    paths:
      - public
  rules:
    - if: $CI_COMMIT_TAG

